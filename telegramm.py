import asyncio
import logging
from aiogram import F
from random import randint
from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command
from aiogram.enums.dice_emoji import DiceEmoji
from aiogram.utils.keyboard import InlineKeyboardBuilder

import kb
import text

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)
# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="7044627094:AAFQklyTsJfBgctPyEEuUmV55PM9L3Qud90")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä
dp = Dispatcher()


@dp.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer(text.greet.format(name=message.from_user.full_name), reply_markup=kb.menu)

@dp.message(F.text == "–ú–µ–Ω—é")
@dp.message(F.text == "–í—ã–π—Ç–∏ –≤ –º–µ–Ω—é")
@dp.message(F.text == "‚óÄÔ∏è –í—ã–π—Ç–∏ –≤ –º–µ–Ω—é")
async def menu(message: types.Message):
    await message.answer(text.menu, reply_markup=kb.menu)



@dp.callback_query(F.data == "ball")
async def cmd_dice(callback: types.CallbackQuery):
   await callback.message.answer_dice(emoji=DiceEmoji.FOOTBALL)

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
# @dp.message(Command("–º—è—á–∏–∫"))
# async def cmd_dice(message: types.Message):
#     await message.answer_dice(emoji=DiceEmoji.FOOTBALL)

@dp.message(Command("–¥–∞—Ä–æ—É"))
async def cmd_test1(message: types.Message):
    await message.reply("–∫—É")

# async def cmd_dice(message: types.Message):
#     await message.answer_dice(emoji=DiceEmoji.BASKETBALL)
    
    
@dp.callback_query(F.data == "new")
async def cmd_new(callback: types.CallbackQuery):
   await callback.message.answer('t.me/novostinskrf')
    
@dp.callback_query(F.data == "k")
async def cmd_new(callback: types.CallbackQuery):
   await callback.message.answer('https://www.kinopoisk.ru/?utm_referrer=wylsa.com')
    
@dp.callback_query(F.data == "m")
async def cmd_new(callback: types.CallbackQuery):
   await callback.message.answer('https://www.youtube.com/watch?v=dQw4w9WgXcQ')
    
@dp.callback_query(F.data == "r")
async def cmd_new(callback: types.CallbackQuery):
   await callback.message.answer('https://www.youtube.com/watch?v=XqZsoesa55w')
    
@dp.message(Command("–¢–≤–∏—á"))
async def cmd_dice(message: types.Message):
    await message.answer('https://www.twitch.tv/')
    
@dp.message(Command("–∫–∞–∑–∏–Ω–æ"))
async def cmd_dice(message: types.Message):
    await message.answer_dice(emoji=DiceEmoji.SLOT_MACHINE)
    
@dp.callback_query(F.data == "l")
async def cmd_new(callback: types.CallbackQuery):
   await callback.message.answer_dice(emoji=DiceEmoji.DART)
    
@dp.callback_query(F.data == "b")
async def cmd_new(callback: types.CallbackQuery):
   await callback.message.answer_dice(emoji=DiceEmoji.BOWLING)

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /test2
@dp.message(Command("–∑–∞–Ω—è—Ç?"))
async def cmd_test2(message: types.Message):
    await message.reply("–Ω–∏—Ç,–∞ —Ç—ã?")

# –ì–¥–µ-—Ç–æ –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Ñ—É–Ω–∫—Ü–∏–∏ main():

# –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–ª–ª–∏–Ω–≥–∞ –Ω–æ–≤—ã—Ö –∞–ø–¥–µ–π—Ç–æ–≤
async def main():
    await dp.start_polling(bot)
@dp.callback_query(F.data == "h")
async def cmd_dice(callback: types.CallbackQuery):
   await callback.message.answer_dice(emoji="üé≤")

@dp.message(Command("random10"))
async def cmd_random(message: types.Message):
    builder = InlineKeyboardBuilder()
    builder.add(types.InlineKeyboardButton(
        text="–∂–º–∏ –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥",
        callback_data="random_value")
    )
    await message.answer(
        "—è –Ω–∞–ø–∏—à—É —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10",
        reply_markup=builder.as_markup()
    )
    
@dp.callback_query(F.data == "random_value")
async def send_random_value(callback: types.CallbackQuery):
    await callback.message.answer(str(randint(1, 100)))

@dp.message(Command("–∏–≥—Ä–æ–≤—ã–µ_–Ω–æ–≤–æ—Å—Ç–∏"))
async def cmd_test1(message: types.Message):
    await message.answer('t.me/GamerNewer')
    
@dp.callback_query(F.data == "ZX") 
async def cmd_—Ä–µ–≥–∞–Ω—å–µ(callback: types.CallbackQuery):
    kb = [
        [types.KeyboardButton(text="–≥–∏—Ç—Ö–∞–±")],
        [types.KeyboardButton(text="–ø–æ—á—Ç–∞")],
        [types.KeyboardButton(text="—é—Ç—É–±")],
        [types.KeyboardButton(text="–æ–≤–µ—Ä–≤—É–ª—å—Ñ")],
        [types.KeyboardButton(text="–≤–∫")]
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=kb)
    await callback.message.answer("–∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—Å—è?", reply_markup=keyboard)
    
@dp.message(F.text.lower() == "–≥–∏—Ç—Ö–∞–±")
async def with_puree(message: types.Message):
    await message.reply("https://github.com/")
    
@dp.message(F.text.lower() == "–ø–æ—á—Ç–∞")
async def with_puree(message: types.Message):
    await message.reply("https://www.google.com/intl/ru/gmail/about/")
    
@dp.message(F.text.lower() == "—é—Ç—É–±")
async def with_puree(message: types.Message):
    await message.reply("https://www.youtube.com/account_advanced?hl=ru")

@dp.message(F.text.lower() == "–æ–≤–µ—Ä–≤—É–ª—å—Ñ")
async def with_puree(message: types.Message):
    await message.reply("https://stackoverflow.com/")
    
@dp.message(F.text.lower() == "–≤–∫")
async def with_puree(message: types.Message):
    await message.reply("https://vk.com/")
    
if __name__ == "__main__":
    asyncio.run(main())


